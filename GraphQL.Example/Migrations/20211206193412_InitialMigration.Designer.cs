// <auto-generated />
using System;
using GraphQL.Example.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQL.Example.Migrations
{
  [DbContext(typeof(DataContext))]
  [Migration("20211206193412_InitialMigration")]
  partial class InitialMigration
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
      modelBuilder
        .HasAnnotation("ProductVersion", "6.0.0")
        .HasAnnotation("Relational:MaxIdentifierLength", 64);

      modelBuilder.Entity("GraphQL.Example.Domain.Entities.Book", b =>
      {
        b.Property<Guid>("Id")
          .ValueGeneratedOnAdd()
          .HasColumnType("char(36)");

        b.Property<string>("Author")
          .IsRequired()
          .HasColumnType("varchar(100)")
          .HasColumnName("author");

        b.Property<DateTime>("CreatedAt")
          .HasColumnType("datetime(6)");

        b.Property<bool>("Deleted")
          .HasColumnType("tinyint(1)");

        b.Property<DateTime?>("DeletedAt")
          .HasColumnType("datetime(6)");

        b.Property<string>("ISBN")
          .IsRequired()
          .HasColumnType("varchar(100)")
          .HasColumnName("isbn");

        b.Property<string>("Language")
          .IsRequired()
          .HasColumnType("varchar(100)")
          .HasColumnName("language");

        b.Property<decimal>("Pages")
          .HasColumnType("numeric(4,0)")
          .HasColumnName("pages");

        b.Property<Guid?>("PublisherId")
          .HasColumnType("char(36)")
          .HasColumnName("publisher_id");

        b.Property<string>("Title")
          .IsRequired()
          .HasColumnType("varchar(100)")
          .HasColumnName("title");

        b.Property<DateTime?>("UpdatedAt")
          .HasColumnType("datetime(6)");

        b.HasKey("Id");

        b.HasIndex("ISBN")
          .IsUnique();

        b.HasIndex("PublisherId");

        b.ToTable("reg_books", (string)null);
      });

      modelBuilder.Entity("GraphQL.Example.Domain.Entities.Publisher", b =>
      {
        b.Property<Guid>("Id")
          .ValueGeneratedOnAdd()
          .HasColumnType("char(36)");

        b.Property<DateTime>("CreatedAt")
          .HasColumnType("datetime(6)");

        b.Property<bool>("Deleted")
          .HasColumnType("tinyint(1)");

        b.Property<DateTime?>("DeletedAt")
          .HasColumnType("datetime(6)");

        b.Property<string>("Name")
          .IsRequired()
          .HasColumnType("varchar(100)")
          .HasColumnName("name");

        b.Property<DateTime?>("UpdatedAt")
          .HasColumnType("datetime(6)");

        b.HasKey("Id");

        b.ToTable("reg_publishers", (string)null);
      });

      modelBuilder.Entity("GraphQL.Example.Domain.Entities.Book", b =>
      {
        b.HasOne("GraphQL.Example.Domain.Entities.Publisher", "Publisher")
          .WithMany("Books")
          .HasForeignKey("PublisherId");

        b.Navigation("Publisher");
      });

      modelBuilder.Entity("GraphQL.Example.Domain.Entities.Publisher", b =>
      {
        b.Navigation("Books");
      });
    }
  }
}
